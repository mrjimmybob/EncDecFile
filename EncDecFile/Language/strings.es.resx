<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="action" xml:space="preserve">
    <value>Acción</value>
  </data>
  <data name="automatic_detection" xml:space="preserve">
    <value>Detección automática (menos fiable)</value>
  </data>
  <data name="a_opt_desc" xml:space="preserve">
    <value>Auto encripta o desencripta el contenido del fichero</value>
  </data>
  <data name="a_opt_desc2" xml:space="preserve">
    <value>Si el contenido del fichero de configuración está encriptada, se desencripta y viceversa</value>
  </data>
  <data name="created_output_file" xml:space="preserve">
    <value>Creado el fichero de salida</value>
  </data>
  <data name="decrypted" xml:space="preserve">
    <value>Desencriptado</value>
  </data>
  <data name="decrypted_string" xml:space="preserve">
    <value>Cadena desencriptada</value>
  </data>
  <data name="decrypting" xml:space="preserve">
    <value>Desencriptando</value>
  </data>
  <data name="d_opt_desc" xml:space="preserve">
    <value>Desencripta el fichero de configuración</value>
  </data>
  <data name="encrypted" xml:space="preserve">
    <value>Encriptado</value>
  </data>
  <data name="encrypted_string" xml:space="preserve">
    <value>Cadena encriptada</value>
  </data>
  <data name="encrypting" xml:space="preserve">
    <value>Encriptando</value>
  </data>
  <data name="error_creating_output_file" xml:space="preserve">
    <value>Error creando el fichero de salida</value>
  </data>
  <data name="error_processing_file" xml:space="preserve">
    <value>Error procesando fichero</value>
  </data>
  <data name="e_opt_desc" xml:space="preserve">
    <value>Encripta el fichero de configuración</value>
  </data>
  <data name="filename" xml:space="preserve">
    <value>fichero </value>
  </data>
  <data name="file_does_not_exist" xml:space="preserve">
    <value>El fichero no existe</value>
  </data>
  <data name="finished_processing_file" xml:space="preserve">
    <value>Se ha terminado de procesar el fichero</value>
  </data>
  <data name="finished_processing_string" xml:space="preserve">
    <value>Se terminó de procesar la cadena</value>
  </data>
  <data name="from_a_total_of" xml:space="preserve">
    <value>De un total de</value>
  </data>
  <data name="in" xml:space="preserve">
    <value>en</value>
  </data>
  <data name="input_file" xml:space="preserve">
    <value>Fichero de entrada</value>
  </data>
  <data name="need_to_be_group_gudepssii" xml:space="preserve">
    <value>Debes pertenecer al grupo gudepssii para ejecutar este programa</value>
  </data>
  <data name="options" xml:space="preserve">
    <value>Opciones</value>
  </data>
  <data name="outputfile" xml:space="preserve">
    <value>ficherosalida </value>
  </data>
  <data name="output_file" xml:space="preserve">
    <value>Output File:</value>
  </data>
  <data name="output_file_already_exists" xml:space="preserve">
    <value>El fichero de salida ya existe, abortando</value>
  </data>
  <data name="o_opt_desc" xml:space="preserve">
    <value>Escribir la salida al fichero de salida</value>
  </data>
  <data name="o_opt_desc2" xml:space="preserve">
    <value>Si no se da un nombre de fichero con -o, se nombra automáticamente</value>
  </data>
  <data name="parameter_error" xml:space="preserve">
    <value>Error de parámetros</value>
  </data>
  <data name="path_is_a_directory_should_be_a_filename" xml:space="preserve">
    <value>La ruta es un directorio, debería ser un fichero</value>
  </data>
  <data name="permision_denied" xml:space="preserve">
    <value>Permiso denegado</value>
  </data>
  <data name="processing" xml:space="preserve">
    <value>Procesando</value>
  </data>
  <data name="progdesc" xml:space="preserve">
    <value>Programa para encriptar o desencriptar archivos de configuración .config de programas .Net.</value>
  </data>
  <data name="string" xml:space="preserve">
    <value>cadena</value>
  </data>
  <data name="s_opt_desc" xml:space="preserve">
    <value>Encripta o desencripta una cadena de caracteres e imprime en la salida estándar</value>
  </data>
  <data name="tried_decrypt" xml:space="preserve">
    <value>Intentado desencriptar no encriptado</value>
  </data>
  <data name="unspecified_error_processing_file" xml:space="preserve">
    <value>Error no especificado procesando el fichero</value>
  </data>
  <data name="usage" xml:space="preserve">
    <value>Uso</value>
  </data>
  <data name="with_errors" xml:space="preserve">
    <value>con errores</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="see_usage" xml:space="preserve">
    <value>Vea la ayuda</value>
  </data>
  <data name="missing_option" xml:space="preserve">
    <value>Falta el valor de la opción</value>
  </data>
  <data name="found" xml:space="preserve">
    <value>Encontrado</value>
  </data>
  <data name="encrypt_decrypt" xml:space="preserve">
    <value>( [E]ncriptar | [D]ecriptar | [O]tro )</value>
  </data>
</root>